
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDleftEQNEQleftLESSGREATERLEQGEQleftPLUSMINUSleftTIMESDIVIDErightNOTAND BOOLEAN CHAR DIVIDE ELSE EQ EQUALS GEQ GREATER ID IF LBRACE LEQ LESS LPAREN MINUS NEQ NOT NUMBER OR PLUS PRINT RBRACE RPAREN SEMICOLON STRING TIMESprogram : statement_liststatement_list : statement_list statement\n| statementstatement : print_statement\n| assign_statement\n| if_statementprint_statement : PRINT LPAREN expression RPAREN SEMICOLONassign_statement : ID EQUALS expression SEMICOLONif_statement : IF LPAREN expression RPAREN block else_if_optelse_if_opt : ELSE IF LPAREN expression RPAREN block else_if_opt\n| ELSE block\n| emptyblock : LBRACE statement_list RBRACEexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression LESS expression\n| expression GREATER expression\n| expression LEQ expression\n| expression GEQ expression\n| expression EQ expression\n| expression NEQ expression\n| expression AND expression\n| expression OR expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : CHARexpression : BOOLEANexpression : IDempty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,10,39,42,55,56,57,59,60,62,63,67,68,],[7,7,-3,-4,-5,-6,-2,-8,-7,-33,7,-9,-12,7,-11,-13,-33,-10,]),'ID':([0,2,3,4,5,6,10,11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,39,42,55,56,57,59,60,62,63,64,67,68,],[8,8,-3,-4,-5,-6,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-8,-7,-33,8,-9,-12,8,-11,-13,21,-33,-10,]),'IF':([0,2,3,4,5,6,10,39,42,55,56,57,58,59,60,62,63,67,68,],[9,9,-3,-4,-5,-6,-2,-8,-7,-33,9,-9,61,-12,9,-11,-13,-33,-10,]),'$end':([1,2,3,4,5,6,10,39,42,55,57,59,62,63,67,68,],[0,-1,-3,-4,-5,-6,-2,-8,-7,-33,-9,-12,-11,-13,-33,-10,]),'RBRACE':([3,4,5,6,10,39,42,55,57,59,60,62,63,67,68,],[-3,-4,-5,-6,-2,-8,-7,-33,-9,-12,63,-11,-13,-33,-10,]),'LPAREN':([7,9,11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,61,64,],[11,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,64,14,]),'EQUALS':([8,],[12,]),'NOT':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'NUMBER':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'STRING':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'CHAR':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'BOOLEAN':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'RPAREN':([15,17,18,19,20,21,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[25,-28,-29,-30,-31,-32,40,41,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,66,]),'PLUS':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[26,-28,-29,-30,-31,-32,26,26,26,-26,-27,-14,-15,-16,-17,26,26,26,26,26,26,26,26,26,]),'MINUS':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[27,-28,-29,-30,-31,-32,27,27,27,-26,-27,-14,-15,-16,-17,27,27,27,27,27,27,27,27,27,]),'TIMES':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[28,-28,-29,-30,-31,-32,28,28,28,-26,-27,28,28,-16,-17,28,28,28,28,28,28,28,28,28,]),'DIVIDE':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[29,-28,-29,-30,-31,-32,29,29,29,-26,-27,29,29,-16,-17,29,29,29,29,29,29,29,29,29,]),'LESS':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[30,-28,-29,-30,-31,-32,30,30,30,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,30,30,30,30,30,]),'GREATER':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[31,-28,-29,-30,-31,-32,31,31,31,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,31,31,31,31,31,]),'LEQ':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[32,-28,-29,-30,-31,-32,32,32,32,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,32,32,32,32,32,]),'GEQ':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[33,-28,-29,-30,-31,-32,33,33,33,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,33,33,33,33,33,]),'EQ':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[34,-28,-29,-30,-31,-32,34,34,34,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,34,34,34,]),'NEQ':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[35,-28,-29,-30,-31,-32,35,35,35,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,35,35,35,]),'AND':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[36,-28,-29,-30,-31,-32,36,36,36,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,36,36,]),'OR':([15,17,18,19,20,21,22,23,24,38,41,43,44,45,46,47,48,49,50,51,52,53,54,65,],[37,-28,-29,-30,-31,-32,37,37,37,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,37,]),'SEMICOLON':([17,18,19,20,21,22,25,38,41,43,44,45,46,47,48,49,50,51,52,53,54,],[-28,-29,-30,-31,-32,39,42,-26,-27,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,]),'LBRACE':([40,58,66,],[56,56,56,]),'ELSE':([55,63,67,],[58,-13,58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,56,],[2,60,]),'statement':([0,2,56,60,],[3,10,3,10,]),'print_statement':([0,2,56,60,],[4,4,4,4,]),'assign_statement':([0,2,56,60,],[5,5,5,5,]),'if_statement':([0,2,56,60,],[6,6,6,6,]),'expression':([11,12,13,14,16,26,27,28,29,30,31,32,33,34,35,36,37,64,],[15,22,23,24,38,43,44,45,46,47,48,49,50,51,52,53,54,65,]),'block':([40,58,66,],[55,62,67,]),'else_if_opt':([55,67,],[57,68,]),'empty':([55,67,],[59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',121),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',126),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',127),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',135),
  ('statement -> assign_statement','statement',1,'p_statement','parser.py',136),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',137),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser.py',141),
  ('assign_statement -> ID EQUALS expression SEMICOLON','assign_statement',4,'p_assign_statement','parser.py',145),
  ('if_statement -> IF LPAREN expression RPAREN block else_if_opt','if_statement',6,'p_if_statement','parser.py',150),
  ('else_if_opt -> ELSE IF LPAREN expression RPAREN block else_if_opt','else_if_opt',7,'p_else_if_opt','parser.py',154),
  ('else_if_opt -> ELSE block','else_if_opt',2,'p_else_if_opt','parser.py',155),
  ('else_if_opt -> empty','else_if_opt',1,'p_else_if_opt','parser.py',156),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',168),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',172),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',173),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',174),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',175),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','parser.py',176),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','parser.py',177),
  ('expression -> expression LEQ expression','expression',3,'p_expression_binop','parser.py',178),
  ('expression -> expression GEQ expression','expression',3,'p_expression_binop','parser.py',179),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',180),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser.py',181),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',182),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',183),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',187),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',191),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',195),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',199),
  ('expression -> CHAR','expression',1,'p_expression_char','parser.py',203),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','parser.py',207),
  ('expression -> ID','expression',1,'p_expression_variable','parser.py',211),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',215),
]
