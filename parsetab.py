
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE EQUALS ID LPAREN MINUS MULTIPLY NUMBER PLUS PRINT RPARENstatement : ID EQUALS expressionstatement : PRINT LPAREN expression RPARENexpression : IDexpression : expression PLUS termexpression : expression MINUS termterm : term MULTIPLY factorterm : term DIVIDE factorexpression : termterm : factorfactor : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,4,5,11,],[2,6,6,6,]),'PRINT':([0,],[3,]),'$end':([1,6,7,8,9,10,18,19,20,21,22,23,],[0,-3,-1,-8,-9,-10,-2,-4,-5,-6,-7,-11,]),'EQUALS':([2,],[4,]),'LPAREN':([3,4,5,11,13,14,15,16,],[5,11,11,11,11,11,11,11,]),'NUMBER':([4,5,11,13,14,15,16,],[10,10,10,10,10,10,10,]),'PLUS':([6,7,8,9,10,12,17,19,20,21,22,23,],[-3,13,-8,-9,-10,13,13,-4,-5,-6,-7,-11,]),'MINUS':([6,7,8,9,10,12,17,19,20,21,22,23,],[-3,14,-8,-9,-10,14,14,-4,-5,-6,-7,-11,]),'RPAREN':([6,8,9,10,12,17,19,20,21,22,23,],[-3,-8,-9,-10,18,23,-4,-5,-6,-7,-11,]),'MULTIPLY':([8,9,10,19,20,21,22,23,],[15,-9,-10,15,15,-6,-7,-11,]),'DIVIDE':([8,9,10,19,20,21,22,23,],[16,-9,-10,16,16,-6,-7,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([4,5,11,],[7,12,17,]),'term':([4,5,11,13,14,],[8,8,8,19,20,]),'factor':([4,5,11,13,14,15,16,],[9,9,9,9,9,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expression','statement',3,'p_assignment','parser.py',11),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print_statement','parser.py',16),
  ('expression -> ID','expression',1,'p_expression_variable','parser.py',21),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',26),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',30),
  ('term -> term MULTIPLY factor','term',3,'p_term_multiply','parser.py',34),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','parser.py',38),
  ('expression -> term','expression',1,'p_expression_term','parser.py',42),
  ('term -> factor','term',1,'p_term_factor','parser.py',46),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',50),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',54),
]
