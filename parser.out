Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> print_statement
Rule 5     statement -> assign_statement
Rule 6     statement -> if_statement
Rule 7     print_statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 8     assign_statement -> ID EQUALS expression SEMICOLON
Rule 9     if_statement -> IF LPAREN expression RPAREN block
Rule 10    if_statement -> IF LPAREN expression RPAREN block ELSE block
Rule 11    block -> LBRACE statement_list RBRACE
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> expression MINUS expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> expression LESS expression
Rule 17    expression -> expression GREATER expression
Rule 18    expression -> expression AND expression
Rule 19    expression -> expression OR expression
Rule 20    expression -> NOT expression
Rule 21    expression -> LPAREN expression RPAREN
Rule 22    expression -> NUMBER
Rule 23    expression -> STRING
Rule 24    expression -> CHAR
Rule 25    expression -> BOOLEAN
Rule 26    expression -> ID

Terminals, with rules where they appear

AND                  : 18
BOOLEAN              : 25
CHAR                 : 24
DIVIDE               : 15
ELSE                 : 10
EQUALS               : 8
GREATER              : 17
ID                   : 8 26
IF                   : 9 10
LBRACE               : 11
LESS                 : 16
LPAREN               : 7 9 10 21
MINUS                : 13
NOT                  : 20
NUMBER               : 22
OR                   : 19
PLUS                 : 12
PRINT                : 7
RBRACE               : 11
RPAREN               : 7 9 10 21
SEMICOLON            : 7 8
STRING               : 23
TIMES                : 14
error                : 

Nonterminals, with rules where they appear

assign_statement     : 5
block                : 9 10 10
expression           : 7 8 9 10 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 21
if_statement         : 6
print_statement      : 4
program              : 0
statement            : 2 3
statement_list       : 1 2 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) assign_statement -> . ID EQUALS expression SEMICOLON
    (9) if_statement -> . IF LPAREN expression RPAREN block
    (10) if_statement -> . IF LPAREN expression RPAREN block ELSE block

    PRINT           shift and go to state 7
    ID              shift and go to state 8
    IF              shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) assign_statement -> . ID EQUALS expression SEMICOLON
    (9) if_statement -> . IF LPAREN expression RPAREN block
    (10) if_statement -> . IF LPAREN expression RPAREN block ELSE block

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 7
    ID              shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> print_statement .

    PRINT           reduce using rule 4 (statement -> print_statement .)
    ID              reduce using rule 4 (statement -> print_statement .)
    IF              reduce using rule 4 (statement -> print_statement .)
    $end            reduce using rule 4 (statement -> print_statement .)
    RBRACE          reduce using rule 4 (statement -> print_statement .)


state 5

    (5) statement -> assign_statement .

    PRINT           reduce using rule 5 (statement -> assign_statement .)
    ID              reduce using rule 5 (statement -> assign_statement .)
    IF              reduce using rule 5 (statement -> assign_statement .)
    $end            reduce using rule 5 (statement -> assign_statement .)
    RBRACE          reduce using rule 5 (statement -> assign_statement .)


state 6

    (6) statement -> if_statement .

    PRINT           reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 11


state 8

    (8) assign_statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 12


state 9

    (9) if_statement -> IF . LPAREN expression RPAREN block
    (10) if_statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 13


state 10

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 11

    (7) print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 15

state 12

    (8) assign_statement -> ID EQUALS . expression SEMICOLON
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 22

state 13

    (9) if_statement -> IF LPAREN . expression RPAREN block
    (10) if_statement -> IF LPAREN . expression RPAREN block ELSE block
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 23

state 14

    (21) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 24

state 15

    (7) print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          shift and go to state 25
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    AND             shift and go to state 32
    OR              shift and go to state 33


state 16

    (20) expression -> NOT . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 34

state 17

    (22) expression -> NUMBER .

    RPAREN          reduce using rule 22 (expression -> NUMBER .)
    PLUS            reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    TIMES           reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    LESS            reduce using rule 22 (expression -> NUMBER .)
    GREATER         reduce using rule 22 (expression -> NUMBER .)
    AND             reduce using rule 22 (expression -> NUMBER .)
    OR              reduce using rule 22 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 22 (expression -> NUMBER .)


state 18

    (23) expression -> STRING .

    RPAREN          reduce using rule 23 (expression -> STRING .)
    PLUS            reduce using rule 23 (expression -> STRING .)
    MINUS           reduce using rule 23 (expression -> STRING .)
    TIMES           reduce using rule 23 (expression -> STRING .)
    DIVIDE          reduce using rule 23 (expression -> STRING .)
    LESS            reduce using rule 23 (expression -> STRING .)
    GREATER         reduce using rule 23 (expression -> STRING .)
    AND             reduce using rule 23 (expression -> STRING .)
    OR              reduce using rule 23 (expression -> STRING .)
    SEMICOLON       reduce using rule 23 (expression -> STRING .)


state 19

    (24) expression -> CHAR .

    RPAREN          reduce using rule 24 (expression -> CHAR .)
    PLUS            reduce using rule 24 (expression -> CHAR .)
    MINUS           reduce using rule 24 (expression -> CHAR .)
    TIMES           reduce using rule 24 (expression -> CHAR .)
    DIVIDE          reduce using rule 24 (expression -> CHAR .)
    LESS            reduce using rule 24 (expression -> CHAR .)
    GREATER         reduce using rule 24 (expression -> CHAR .)
    AND             reduce using rule 24 (expression -> CHAR .)
    OR              reduce using rule 24 (expression -> CHAR .)
    SEMICOLON       reduce using rule 24 (expression -> CHAR .)


state 20

    (25) expression -> BOOLEAN .

    RPAREN          reduce using rule 25 (expression -> BOOLEAN .)
    PLUS            reduce using rule 25 (expression -> BOOLEAN .)
    MINUS           reduce using rule 25 (expression -> BOOLEAN .)
    TIMES           reduce using rule 25 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 25 (expression -> BOOLEAN .)
    LESS            reduce using rule 25 (expression -> BOOLEAN .)
    GREATER         reduce using rule 25 (expression -> BOOLEAN .)
    AND             reduce using rule 25 (expression -> BOOLEAN .)
    OR              reduce using rule 25 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 25 (expression -> BOOLEAN .)


state 21

    (26) expression -> ID .

    RPAREN          reduce using rule 26 (expression -> ID .)
    PLUS            reduce using rule 26 (expression -> ID .)
    MINUS           reduce using rule 26 (expression -> ID .)
    TIMES           reduce using rule 26 (expression -> ID .)
    DIVIDE          reduce using rule 26 (expression -> ID .)
    LESS            reduce using rule 26 (expression -> ID .)
    GREATER         reduce using rule 26 (expression -> ID .)
    AND             reduce using rule 26 (expression -> ID .)
    OR              reduce using rule 26 (expression -> ID .)
    SEMICOLON       reduce using rule 26 (expression -> ID .)


state 22

    (8) assign_statement -> ID EQUALS expression . SEMICOLON
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    SEMICOLON       shift and go to state 35
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    AND             shift and go to state 32
    OR              shift and go to state 33


state 23

    (9) if_statement -> IF LPAREN expression . RPAREN block
    (10) if_statement -> IF LPAREN expression . RPAREN block ELSE block
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          shift and go to state 36
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    AND             shift and go to state 32
    OR              shift and go to state 33


state 24

    (21) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    AND             shift and go to state 32
    OR              shift and go to state 33


state 25

    (7) print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 38


state 26

    (12) expression -> expression PLUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 39

state 27

    (13) expression -> expression MINUS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 40

state 28

    (14) expression -> expression TIMES . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 41

state 29

    (15) expression -> expression DIVIDE . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 42

state 30

    (16) expression -> expression LESS . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 43

state 31

    (17) expression -> expression GREATER . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 44

state 32

    (18) expression -> expression AND . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 45

state 33

    (19) expression -> expression OR . expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . expression MINUS expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . expression LESS expression
    (17) expression -> . expression GREATER expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . NOT expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . STRING
    (24) expression -> . CHAR
    (25) expression -> . BOOLEAN
    (26) expression -> . ID

    NOT             shift and go to state 16
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 17
    STRING          shift and go to state 18
    CHAR            shift and go to state 19
    BOOLEAN         shift and go to state 20
    ID              shift and go to state 21

    expression                     shift and go to state 46

state 34

    (20) expression -> NOT expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 20 (expression -> NOT expression .)
    AND             reduce using rule 20 (expression -> NOT expression .)
    OR              reduce using rule 20 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 20 (expression -> NOT expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31

  ! PLUS            [ reduce using rule 20 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 20 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 20 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 35

    (8) assign_statement -> ID EQUALS expression SEMICOLON .

    PRINT           reduce using rule 8 (assign_statement -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 8 (assign_statement -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 8 (assign_statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 8 (assign_statement -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 8 (assign_statement -> ID EQUALS expression SEMICOLON .)


state 36

    (9) if_statement -> IF LPAREN expression RPAREN . block
    (10) if_statement -> IF LPAREN expression RPAREN . block ELSE block
    (11) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 47

state 37

    (21) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 21 (expression -> LPAREN expression RPAREN .)


state 38

    (7) print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    PRINT           reduce using rule 7 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 7 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 7 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 7 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 7 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 39

    (12) expression -> expression PLUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    LESS            reduce using rule 12 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 12 (expression -> expression PLUS expression .)
    AND             reduce using rule 12 (expression -> expression PLUS expression .)
    OR              reduce using rule 12 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 40

    (13) expression -> expression MINUS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 13 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 13 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 13 (expression -> expression MINUS expression .)
    LESS            reduce using rule 13 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 13 (expression -> expression MINUS expression .)
    AND             reduce using rule 13 (expression -> expression MINUS expression .)
    OR              reduce using rule 13 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 41

    (14) expression -> expression TIMES expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    LESS            reduce using rule 14 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 14 (expression -> expression TIMES expression .)
    AND             reduce using rule 14 (expression -> expression TIMES expression .)
    OR              reduce using rule 14 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 42

    (15) expression -> expression DIVIDE expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 15 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 15 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 15 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 43

    (16) expression -> expression LESS expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 16 (expression -> expression LESS expression .)
    LESS            reduce using rule 16 (expression -> expression LESS expression .)
    GREATER         reduce using rule 16 (expression -> expression LESS expression .)
    AND             reduce using rule 16 (expression -> expression LESS expression .)
    OR              reduce using rule 16 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression LESS expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! PLUS            [ reduce using rule 16 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 44

    (17) expression -> expression GREATER expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 17 (expression -> expression GREATER expression .)
    LESS            reduce using rule 17 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 17 (expression -> expression GREATER expression .)
    AND             reduce using rule 17 (expression -> expression GREATER expression .)
    OR              reduce using rule 17 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! PLUS            [ reduce using rule 17 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 30 ]
  ! GREATER         [ shift and go to state 31 ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 45

    (18) expression -> expression AND expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 18 (expression -> expression AND expression .)
    AND             reduce using rule 18 (expression -> expression AND expression .)
    OR              reduce using rule 18 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression AND expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31

  ! PLUS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 32 ]
  ! OR              [ shift and go to state 33 ]


state 46

    (19) expression -> expression OR expression .
    (12) expression -> expression . PLUS expression
    (13) expression -> expression . MINUS expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression
    (16) expression -> expression . LESS expression
    (17) expression -> expression . GREATER expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression

    RPAREN          reduce using rule 19 (expression -> expression OR expression .)
    OR              reduce using rule 19 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression OR expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    LESS            shift and go to state 30
    GREATER         shift and go to state 31
    AND             shift and go to state 32

  ! PLUS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 33 ]


state 47

    (9) if_statement -> IF LPAREN expression RPAREN block .
    (10) if_statement -> IF LPAREN expression RPAREN block . ELSE block

    PRINT           reduce using rule 9 (if_statement -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 9 (if_statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 9 (if_statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 9 (if_statement -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 9 (if_statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 49


state 48

    (11) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) assign_statement -> . ID EQUALS expression SEMICOLON
    (9) if_statement -> . IF LPAREN expression RPAREN block
    (10) if_statement -> . IF LPAREN expression RPAREN block ELSE block

    PRINT           shift and go to state 7
    ID              shift and go to state 8
    IF              shift and go to state 9

    statement_list                 shift and go to state 50
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6

state 49

    (10) if_statement -> IF LPAREN expression RPAREN block ELSE . block
    (11) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 48

    block                          shift and go to state 51

state 50

    (11) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) assign_statement -> . ID EQUALS expression SEMICOLON
    (9) if_statement -> . IF LPAREN expression RPAREN block
    (10) if_statement -> . IF LPAREN expression RPAREN block ELSE block

    RBRACE          shift and go to state 52
    PRINT           shift and go to state 7
    ID              shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6

state 51

    (10) if_statement -> IF LPAREN expression RPAREN block ELSE block .

    PRINT           reduce using rule 10 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 10 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 10 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 10 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 10 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)


state 52

    (11) block -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 11 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 11 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 11 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 11 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 11 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 11 (block -> LBRACE statement_list RBRACE .)

